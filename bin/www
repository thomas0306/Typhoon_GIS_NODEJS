#!/usr/bin/env node
var sticky = require('sticky-session');
var cluster = require('cluster');

var app = require('../app');
var server = require('http').createServer(app);
var socket = require('./../SocketIO/socket');

var port = process.env.OPENSHIFT_NODEJS_PORT || 3000;
var ip = process.env.OPENSHIFT_NODEJS_IP || "127.0.0.1";



/**
 * Listen on provided port, on all network interfaces.
 */
server.on('error', onError);

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error('requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error('is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
    console.log(new Date() + ': Server started on ' + port + ' port');
}

if (!sticky.listen(server, port)) {
    /**
     * Cron jobs
     */
    var cron = require('../cron_config');

    // Master code
    server.once('listening', onListening);

} else {
    // Worker code
    socket.init(server);
}
